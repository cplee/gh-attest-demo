name: publish

env:
  IMAGE_URL: 590184084703.dkr.ecr.us-east-1.amazonaws.com/gh-attest-demo
  REKOR_URL: https://codeledger.caseypl.people.aws.dev

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  publish:
    runs-on: codebuild-gh-attest-demo-${{ github.run_id }}-${{ github.run_attempt }}
    #runs-on: ubuntu-latest

    permissions:
      id-token: write
      #attestations: write
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.6.0
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.IMAGE_URL }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate build provenance predicate
        uses: actions/attest-build-provenance/predicate@d58ddf9f241cd8163408934540d01c3335864d64 # predicate@1.1.2
        id: provenance
      - run: echo '${{steps.provenance.outputs.predicate}}' > predicate.json

      # - name: Generate artifact attestation
      #   uses: cplee/attest-build-provenance@main
      #   with:
      #     subject-name: ${{ env.IMAGE_URL }}
      #     # subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      #     subject-digest: ${{ steps.push.outputs.digest }}
      #     push-to-registry: true
      #     rekor-url: ${{ env.REKOR_URL }}
      # - name: Generate artifact attestation for IaC
      #   id: provenance
      #   uses: cplee/attest-build-provenance@main
      #   with:
      #     subject-path: bucket.tf
      #     push-to-registry: false
      #     rekor-url: ${{ env.REKOR_URL }}
      - name: Sign Image
        run: cosign sign --yes --rekor-url=${{env.REKOR_URL}} ${{env.IMAGE_URL}}@${{steps.push.outputs.digest}}
      - name: Attest Image
        run: cosign attest --yes --rekor-url=${{env.REKOR_URL}} --predicate predicate.json --type=slsaprovenance1 ${{env.IMAGE_URL}}@${{steps.push.outputs.digest}}
      - name: Generate SBOM
        uses: anchore/sbom-action@v0
        with:
          path: .
          format: 'spdx-json'
          output-file: 'sbom.spdx.json'
      - name: Attest SBOM
        run: cosign attest --yes --rekor-url=${{env.REKOR_URL}} --predicate sbom.spdx.json --type=spdxjson ${{env.IMAGE_URL}}@${{steps.push.outputs.digest}}